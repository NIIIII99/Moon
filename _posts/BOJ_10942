package DP;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.Arrays;
import java.util.StringTokenizer;

public class Prob_10942_2 {
	static int N, M;
	static int[] data;
	static int[][] dp;
	public static void main(String[] args) throws Exception {
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
		
		StringTokenizer st = new StringTokenizer(br.readLine());
		N = Integer.parseInt(st.nextToken());
		data = new int[N];
		dp = new int[N][N];
		
		for(int i=0;i<N;i++) {
			Arrays.fill(dp[i], -1);
		}
		
		st = new StringTokenizer(br.readLine());
		for(int i=0;i<N;i++) {
			data[i] = Integer.parseInt(st.nextToken());
		}
		
		
		st = new StringTokenizer(br.readLine());
		M = Integer.parseInt(st.nextToken());
		for(int i=0;i<M;i++) {
			st = new StringTokenizer(br.readLine());
			int start = Integer.parseInt(st.nextToken())-1;
			int end = Integer.parseInt(st.nextToken())-1;
			
//			for(int j=0;j<N;j++) {
//				Arrays.fill(dp[j], -1);
//			}
			
//			check(start, end);
//			System.out.println(dp[start][end]);
			System.out.println(check(start, end));
		}
		
	}
	private static int check(int i, int j) {
		if(i==j) {
			return 1;
		}else if(i+1==j) {
			if(data[i+1]==data[j]) return 1;
			else return 0;
		}
		if(dp[i][j]>=0) return dp[i][j];
		if(data[i] != data[j]) return dp[i][j] = 0;
		else return dp[i][j]=check(i+1,j-1);
	}
}
